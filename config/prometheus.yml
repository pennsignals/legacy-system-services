global:
  scrape_interval:     15s 
  external_labels:
    monitor: 'codelab-monitor'

alerting:
  alertmanagers:
  - consul_sd_configs:
    - server: {{ env "CONSUL_ADDR" }}
      scheme: "https"
      tls_config:
        insecure_skip_verify: true
      services: ['alertmanager']

# Rules and alerts are read from the specified file(s)
rule_files:
 - docker_alert.yml
 - node_alert.yml
 - prometheus_alert.yml
 - promtail_alert.yml
 - service_alert.yml

scrape_configs:

  - job_name: 'alertmanager'

    consul_sd_configs:
    - server: {{ env "CONSUL_ADDR" }}
      scheme: "https"
      tls_config:
        insecure_skip_verify: true
      services: ['alertmanager']

  - job_name: 'nomad_metrics'

    consul_sd_configs:
    - server: {{ env "CONSUL_ADDR" }}
      scheme: "https"
      tls_config:
        insecure_skip_verify: true
      services: ['nomad-client', 'nomad']

    relabel_configs:
    - source_labels: ['__meta_consul_tags']
      regex: '(.*)http(.*)'
      action: keep

    scrape_interval: 5s
    metrics_path: /v1/metrics
    params:
      format: ['prometheus']


  - job_name:       'prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['localhost:9090']

# {{ range services }}{{if in .Tags "monitoring"}}
#   - job_name: {{ .Name }}
#     scrape_interval: 5s
#     static_configs:
#       - targets: [{{range $index, $service := service .Name }}{{if ne $index 0}},{{end}}'{{$service.Address}}:{{$service.Port}}'{{end}}]
#         labels:
#           group: 'monitoring'
# {{end}}{{ end }}

# {{ range services }}{{if in .Tags "metrics"}}
#   - job_name: {{ .Name }}
#     scrape_interval: 5s
#     {{ range service .Name }}static_configs:
#     - targets: ['{{.Address }}:{{.Port}}']
#       labels:
#         group: 'application'
#         app: '{{ .Name}}'{{end}}
# {{end}}{{ end }}